<% k8s = global_config.k8s -%>
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    provider: porkadot
  name: porkadot-kubernetes
  namespace: kube-system
spec:
  selector:
    app.kubernetes.io/component: kube-apiserver
    app.kubernetes.io/managed-by: porkadot
  <%- host, port = global_config.k8s.control_plane_endpoint_host_and_port -%>
  loadBalancerIP: <%= host %>
  ports:
  - name: https
    port: <%= port %>
    protocol: TCP
    targetPort: <%= global_config.k8s.apiserver.bind_port %>
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    provider: porkadot
  name: porkadot-kubernetes-latest
  namespace: kube-system
spec:
  selector:
    <%- k8s.apiserver.labels.each do |k, v| -%>
    <%= k.to_s %>: <%= v %>
    <%- end -%>
  <%- _, port = global_config.k8s.control_plane_endpoint_host_and_port -%>
  loadBalancerIP: <%= host %>
  ports:
  - name: https
    port: <%= port %>
    protocol: TCP
    targetPort: <%= global_config.k8s.apiserver.bind_port %>
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeconfig-in-cluster
  namespace: kube-system
data:
  kubeconfig: |
    apiVersion: v1
    clusters:
    - name: local
      cluster:
        server: https://<%= k8s.control_plane_endpoint %>
        certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    users:
    - name: service-account
      user:
        # Use service account token
        tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    contexts:
    - context:
        cluster: local
        user: service-account
