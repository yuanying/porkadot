<% k8s = global_config.k8s -%>
---
apiVersion: "apps/v1"
kind: DaemonSet
metadata:
  name: kube-apiserver
  namespace: kube-system
  labels:
    <%- k8s.apiserver.labels.each do |k, v| -%>
    <%= k.to_s %>: <%= v %>
    <%- end -%>
spec:
  selector:
    matchLabels:
      <%- k8s.apiserver.instance_labels.each do |k, v| -%>
      <%= k.to_s %>: <%= v %>
      <%- end -%>
  template:
    metadata:
      labels:
        <%- k8s.apiserver.labels.each do |k, v| -%>
        <%= k.to_s %>: <%= v %>
        <%- end -%>
      annotations:
        checkpointer.alpha.coreos.com/checkpoint: "true"
    spec:
      containers:
      - name: kube-apiserver
        resources:
          requests:
            cpu: 250m
        image: <%= k8s.image_repository %>/kube-apiserver:<%= k8s.kubernetes_version %>
        command:
        - kube-apiserver
        <%- k8s.apiserver.args.each do |k, v| -%>
        - <%= k %><% if v ;%>=<%= v %><%; end %>
        <%- end -%>
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - mountPath: /etc/ca-certificates
          name: etc-ca-certificates
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
        - mountPath: /etc/kubernetes/pki/kubernetes
          name: k8s-tls
          readOnly: true
        - mountPath: /etc/kubernetes/pki/etcd
          name: etcd-tls
          readOnly: true
        - mountPath: /var/lock
          name: var-lock
          readOnly: false
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        k8s.unstable.cloud/master: ""
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      volumes:
      - hostPath:
          path: /etc/ssl/certs
          type: DirectoryOrCreate
        name: ca-certs
      - hostPath:
          path: /usr/share/ca-certificates
          type: DirectoryOrCreate
        name: usr-share-ca-certificates
      - hostPath:
          path: /etc/ca-certificates
          type: DirectoryOrCreate
        name: etc-ca-certificates
      - name: k8s-tls
        secret:
          secretName: kube-apiserver
      - name: etcd-tls
        secret:
          secretName: etcd-tls
      - name: var-lock
        hostPath:
          path: /var/lock
