<% k8s = global_config.k8s -%>
---
apiVersion: v1
kind: Pod
metadata:
  name: bootstrap-kube-controller-manager
  namespace: kube-system
  labels:
    <%- k8s.controller_manager.labels.each do |k, v| -%>
    <%= k.to_s %>: <%= v %>
    <%- end -%>
spec:
  containers:
  - name: kube-controller-manager
    image: <%= k8s.image_repository %>/kube-controller-manager:<%= k8s.kubernetes_version %>
    command:
    - kube-controller-manager
    <%- k8s.controller_manager.args(bootstrap: true).each do |k, v| -%>
    - <%= k %><% if v ;%>=<%= v %><%; end %>
    <%- end -%>
    volumeMounts:
    - name: var-run-kubernetes
      mountPath: /var/run/kubernetes
    - name: kubernetes-secrets
      mountPath: /etc/kubernetes/pki
      readOnly: true
    - name: kubernetes-bootstrap
      mountPath: /etc/kubernetes/bootstrap
      readOnly: true
    - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      name: flexvolume-dir
    - mountPath: /usr/share/ca-certificates
      name: usr-share-ca-certificates
      readOnly: true
    - mountPath: /etc/ca-certificates
      name: etc-ca-certificates
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
  hostNetwork: true
  volumes:
  - name: var-run-kubernetes
    emptyDir: {}
  - name: kubernetes-secrets
    hostPath:
      path: /etc/kubernetes/bootstrap/secrets
  - name: kubernetes-bootstrap
    hostPath:
      path: /etc/kubernetes/bootstrap
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: /var/lib/kubelet/volumeplugins
      type: DirectoryOrCreate
    name: flexvolume-dir
  - hostPath:
      path: /usr/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-share-ca-certificates
  - hostPath:
      path: /etc/ca-certificates
      type: DirectoryOrCreate
    name: etc-ca-certificates
